//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// Dieser Quellcode wurde automatisch generiert von wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="sessionServiceBinding", Namespace="https://finanzonline.bmf.gv.at/fon/ws/session")]
public partial class sessionService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback loginOperationCompleted;
    
    private System.Threading.SendOrPostCallback logoutOperationCompleted;
    
    /// <remarks/>
    public sessionService() {
        this.Url = "https://finanzonline.bmf.gv.at:443/fonws/ws/sessionService";
    }
    
    /// <remarks/>
    public event loginCompletedEventHandler loginCompleted;
    
    /// <remarks/>
    public event logoutCompletedEventHandler logoutCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("login", RequestElementName="loginRequest", RequestNamespace="https://finanzonline.bmf.gv.at/fon/ws/session", ResponseNamespace="https://finanzonline.bmf.gv.at/fon/ws/session", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("id")]
    public string login(string tid, string benid, string pin, string herstellerid, out int rc, out string msg) {
        object[] results = this.Invoke("login", new object[] {
                    tid,
                    benid,
                    pin,
                    herstellerid});
        rc = ((int)(results[1]));
        msg = ((string)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginlogin(string tid, string benid, string pin, string herstellerid, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("login", new object[] {
                    tid,
                    benid,
                    pin,
                    herstellerid}, callback, asyncState);
    }
    
    /// <remarks/>
    public string Endlogin(System.IAsyncResult asyncResult, out int rc, out string msg) {
        object[] results = this.EndInvoke(asyncResult);
        rc = ((int)(results[1]));
        msg = ((string)(results[2]));
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void loginAsync(string tid, string benid, string pin, string herstellerid) {
        this.loginAsync(tid, benid, pin, herstellerid, null);
    }
    
    /// <remarks/>
    public void loginAsync(string tid, string benid, string pin, string herstellerid, object userState) {
        if ((this.loginOperationCompleted == null)) {
            this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
        }
        this.InvokeAsync("login", new object[] {
                    tid,
                    benid,
                    pin,
                    herstellerid}, this.loginOperationCompleted, userState);
    }
    
    private void OnloginOperationCompleted(object arg) {
        if ((this.loginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    internal int logout(string memberidLoc, string userIdLoc, out string returnMsgLoc)
    {
        throw new NotImplementedException();
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("logout", RequestElementName="logoutRequest", RequestNamespace="https://finanzonline.bmf.gv.at/fon/ws/session", ResponseNamespace="https://finanzonline.bmf.gv.at/fon/ws/session", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("rc")]
    public int logout(string tid, string benid, string id, out string msg) {
        object[] results = this.Invoke("logout", new object[] {
                    tid,
                    benid,
                    id});
        msg = ((string)(results[1]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginlogout(string tid, string benid, string id, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("logout", new object[] {
                    tid,
                    benid,
                    id}, callback, asyncState);
    }
    
    /// <remarks/>
    public int Endlogout(System.IAsyncResult asyncResult, out string msg) {
        object[] results = this.EndInvoke(asyncResult);
        msg = ((string)(results[1]));
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void logoutAsync(string tid, string benid, string id) {
        this.logoutAsync(tid, benid, id, null);
    }
    
    /// <remarks/>
    public void logoutAsync(string tid, string benid, string id, object userState) {
        if ((this.logoutOperationCompleted == null)) {
            this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
        }
        this.InvokeAsync("logout", new object[] {
                    tid,
                    benid,
                    id}, this.logoutOperationCompleted, userState);
    }
    
    private void OnlogoutOperationCompleted(object arg) {
        if ((this.logoutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public int rc {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[1]));
        }
    }
    
    /// <remarks/>
    public string msg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[2]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string msg {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}
